import telebot
import time as timelib
import datetime
import requests
from threading import Thread
from lxml import html
from db import Bot as BotDB
import config


USERS = config.USERS
TOKEN = config.TOKEN

BotDB = BotDB('bot.db')

bot = telebot.TeleBot(TOKEN)


# –ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞
def get_bitcoin_price():
	response = requests.get('https://api.coindesk.com/v1/bpi/currentprice.json')
	data = response.json()
	return (data["bpi"]["USD"]["rate"]).replace(',', '')[0:5]

# –ö—É—Ä—Å—ã –µ–≤—Ä–æ, –¥–æ–ª–ª–∞—Ä–∞ –∏ –∏—Ö –æ–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
def get_currency():
	response = requests.get('https://yandex.ru')
	body = html.fromstring(response.text)
	dollar = body.xpath('//span[@class="inline-stocks__value_inner"]/text()')[0]
	euro = body.xpath('//span[@class="inline-stocks__value_inner"]/text()')[1]
	btc = get_bitcoin_price()
	return f'üíµ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n\n üí∞1 EUR = {euro} RUB\n üí∞1 USD = {dollar} RUB\n üí∞1 btc = {btc} USD.'

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
def get_weather(city):
	url = f'http://wttr.in/{city}?0&format=j1&lang=ru&m&M'
	request_headers = {
		'0' : '',
		'forman' : 'j1',
    	'lang' : 'ru',
    	'm' : '',
    	'M' : '',
	}
	response = requests.get(url, headers=request_headers)
	result = ((response.json())['current_condition'])[0]
	state = result['lang_ru'][0]['value']
	degrees = result['temp_C']
	return f'üå§ –ü–æ–≥–æ–¥–∞ –≤ –≥. {city} - üå° {state},  {degrees} ‚ÑÉ'


# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—è—Ç–∏ –ø–µ—Ä–≤—ã—Ö —Å—Ç–∞—Ç–µ–π —Å –Ø–Ω–¥–µ–∫—Å–∞
def get_news():
	response = requests.get('https://yandex.ru')
	body = html.fromstring(response.text)
	news = body.xpath('//a[@class="home-link2 news__item list__item-content list__item-content_with-icon home-link2_color_inherit home-link2_hover_red"]')
	result = ''
	for i in range(0, 5):
		result += f'üìå <a href="{news[i].attrib["href"]}">{news[i].text_content()}</a> \n'
	return f'üì∞ –ü–æ–∫–∞ —Ç—ã —Å–ø–∞–ª:\n{result}'

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –≥–æ—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
def inform(user):
	weather = get_weather(user[1])
	currency = get_currency()
	news = get_news()
	now = int(user[2][0:2].replace(':', ''))
	if now >= 4 and now < 12:
		first_part = '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!'
	elif now >= 12 and now < 18:
		first_part = '–î–æ–±—Ä—ã–π –¥–µ–Ω—å!'
	elif now >= 18 and now <= 23:
		first_part = '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä!'
	else:
		first_part = '–î–æ–±—Ä–æ–π –Ω–æ—á–∏!'
	bot.send_message(user[0], f"{first_part} –í—Ä–µ–º—è - {user[2]}.\n\n{weather}\n\n{currency}\n\n{news}", parse_mode='html')
	#bot.send_message(chat_id, f"{first_part} –í—Ä–µ–º—è - {time}.\n\n{weather}\n\n{currency}\n\n", parse_mode='html')
	print('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')


def check_time(USERS):
	while True:
		USERS = BotDB.get_users()
		hours = int(datetime.datetime.utcnow().strftime('%H')) + 3
		now = datetime.datetime.utcnow().strftime(f'{hours}:%M')
		if len(now) == 5:
		    if int(now[0:2]) >= 24:
			    now = str(int(now[0:2]) - 21) + now[2:5]
		for user in USERS:
			if now == user[2]:
				inform(user)
		timelib.sleep(60)

thread = Thread(target=check_time, args=([USERS])) # —Å–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫


if len(USERS) != 0:
    if not thread.is_alive():
        thread.start()


@bot.message_handler(commands=['start'])
def start(message):
	if message.chat.id not in [element for a_list in USERS for element in a_list]: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
		BotDB.add_user(message.chat.id, '–ú–æ—Å–∫–≤–∞', '6:30')
		second_part = '\n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 6:30 —è –±—É–¥—É —Å–æ–æ–±—â–∞—Ç—å —Ç–µ–±–µ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö, –ø–æ–≥–æ–¥–µ –Ω–∞ —É–ª–∏—Ü–µ –∏ –¥—Ä—É–≥—É—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n\n–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n/city {–≥–æ—Ä–æ–¥} - –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥\n/time {–≤—Ä–µ–º—è —Ñ–æ—Ä–º–∞—Ç–∞ 6:30} - –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è'
		bot.send_message(message.chat.id, ("–ü—Ä–∏–≤–µ—Ç, {0.first_name}!").format(message.from_user, bot.get_me())+second_part, parse_mode='html')
		print('–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {0.first_name}'.format(message.from_user, bot.get_me())) # —Ö–æ—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–¥–æ–±–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å
		if not thread.is_alive():
			thread.start()
	else:
		bot.send_message(message.chat.id, (("–ë–æ—Ç —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω").format(message.from_user, bot.get_me())))


@bot.message_handler(commands=['city'])
def slashcity(message):
	if message.text == '/city':
		current_city = ''
		for user in USERS:
			if user[0] == message.chat.id:
				current_city = user[1]

		bot.send_message(message.chat.id, '–¢–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥ - ' + current_city + '\n–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥: /city {–≥–æ—Ä–æ–¥}', parse_mode='html')
	else:
		local_city = message.text.replace('/city', '').replace(' ', '')
		request_headers = {
    	'Accept-Language' : 'ru'
		}
		response = requests.get(f'http://wttr.in/{local_city}', headers=request_headers)
		if response.text.count('–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å') == 0:
			BotDB.edit_user_city(message.chat.id, local_city)
			bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –≥–æ—Ä–æ–¥ –Ω–∞ {local_city}', parse_mode='html')
			print(('{0.first_name} –∏–∑–º–µ–Ω–∏–ª(a) –≥–æ—Ä–æ–¥ –Ω–∞ ' + local_city).format(message.from_user, bot.get_me()))
		else:
			bot.send_message(message.chat.id, f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥', parse_mode='html')


@bot.message_handler(commands=['time'])
def slashtime(message):
	if message.text == '/time':
		current_time = ''
		for user in USERS:
			if user[0] == message.chat.id:
				current_time = user[2]
		bot.send_message(message.chat.id, '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ' + user[2] + '\n–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è: /time {–≤—Ä–µ–º—è —Ñ–æ—Ä–º–∞—Ç–∞ 6:30}', parse_mode='html')
	else:
		new_time = message.text.replace('/time', '').replace(' ', '')
		if len(new_time) == 5:
			if new_time[2] == ':':
				BotDB.edit_user_time(message.chat.id, new_time)
				bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –≤—Ä–µ–º—è –Ω–∞ {new_time}', parse_mode='html')
			else:
				bot.send_message(message.chat.id, f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è', parse_mode='html')
		else:
			if new_time[1] == ':':
				BotDB.edit_user_time(message.chat.id, new_time)
				bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –≤—Ä–µ–º—è –Ω–∞ {new_time}', parse_mode='html')
			else:
				bot.send_message(message.chat.id, f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è', parse_mode='html')
		print(('{0.first_name} –∏–∑–º–µ–Ω–∏–ª(a) –≤—Ä–µ–º—è –Ω–∞ ' + new_time).format(message.from_user, bot.get_me()))


if __name__ == '__main__':
	bot.polling(none_stop=True)